{"ast":null,"code":"import { useState, useEffect } from 'react';\nexport default (() => {\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setfilteredProducts] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [cartItems, setCartItems] = useState([]); //Products\n\n  useEffect(() => {\n    fetch(\"http://localhost:8000/products/\").then(res => res.json()).then(jsonResponse => {\n      if (jsonResponse) {\n        setProducts(jsonResponse);\n        setfilteredProducts(jsonResponse);\n      }\n    });\n    return () => {};\n  }, []); //Local Storage\n\n  useEffect(() => {\n    if (localStorage.getItem(\"cartItems\")) {\n      setCartItems(JSON.parse(localStorage.getItem(\"cartItems\")));\n    }\n\n    return () => {\n      localStorage.getItem(\"cartItems\");\n      console.log(\"clean up\");\n    };\n  }, []); //Search \n\n  useEffect(() => {\n    setfilteredProducts([...products].filter(product => {\n      return product.title.toLowerCase().includes(search.toLowerCase());\n    }));\n    return () => {\n      console.log(\"clean up\");\n    };\n  }, [search, products]);\n  return {\n    filteredProducts,\n    onAddCart: product => {\n      const cartItem = cartItems;\n      let productAlreadyInCart = false;\n      cartItem.forEach(item => {\n        if (item.id === product.id) {\n          productAlreadyInCart = true;\n          item.count++;\n        }\n      });\n\n      if (!productAlreadyInCart) {\n        cartItem.push({ ...product,\n          count: 1\n        });\n      }\n\n      setCartItems([...cartItem]);\n      localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n    },\n    handleSearch: value => {\n      setSearch(value);\n    },\n    handleChangeSort: sort => {\n      if (sort !== '') {\n        const updated = [...products].sort((a, b) => {\n          return sort === \"lowest\" ? a.price > b.price ? 1 : -1 : a.price < b.price ? 1 : -1;\n        });\n        setfilteredProducts(updated);\n      } else {\n        const updated = [...products].sort((a, b) => {\n          return a.id < b.id ? 1 : -1;\n        });\n        setfilteredProducts(updated);\n      }\n    },\n    onRemoveCart: removeItem => {\n      setCartItems([...cartItems].filter(item => {\n        if (item.id === removeItem.id && removeItem.count <= 1) return false;else {\n          if (item.id === removeItem.id && removeItem.count > 1) item.count--;\n          return true;\n        }\n      }));\n      localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n    },\n    cartItems,\n    search\n  };\n});","map":{"version":3,"sources":["/Users/graj/projects/e-commerece/src/components/useProducts.js"],"names":["useState","useEffect","products","setProducts","filteredProducts","setfilteredProducts","search","setSearch","cartItems","setCartItems","fetch","then","res","json","jsonResponse","localStorage","getItem","JSON","parse","console","log","filter","product","title","toLowerCase","includes","onAddCart","cartItem","productAlreadyInCart","forEach","item","id","count","push","setItem","stringify","handleSearch","value","handleChangeSort","sort","updated","a","b","price","onRemoveCart","removeItem"],"mappings":"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","sourcesContent":["import {useState,useEffect} from 'react';\n\n\nexport default () => {\n\n\n  const [products,setProducts] = useState([]);\n  const [filteredProducts, setfilteredProducts] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [cartItems,setCartItems] = useState([]);\n\n//Products\n    useEffect(() => {\n        fetch(\"http://localhost:8000/products/\")\n          .then(res => res.json())\n          .then(jsonResponse => { \n            if(jsonResponse){\n              setProducts(jsonResponse);\n              setfilteredProducts(jsonResponse);\n            }\n          })\n          return () => {\n    \n            }\n        }, []);\n\n\n //Local Storage\n  useEffect(() => {\n    if(localStorage.getItem(\"cartItems\")){\n      setCartItems(JSON.parse(localStorage.getItem(\"cartItems\")));\n    }\n        return () => {\n          localStorage.getItem(\"cartItems\");\n          console.log(\"clean up\");\n        };\n    }, [])\n\n\n  //Search \n  useEffect(() => {\n    setfilteredProducts(\n        [...products].filter(product => {\n           return product.title.toLowerCase().includes(search.toLowerCase());\n        })\n    )\n    return () => {\n      console.log(\"clean up\");\n    };\n  }, [search,products])\n\n\n\nreturn{\n    filteredProducts,\n    onAddCart : (product) => {\n        const cartItem = cartItems;\n        let productAlreadyInCart = false;\n        cartItem.forEach(item => {\n            if(item.id===product.id){\n                productAlreadyInCart  = true;\n                item.count++;\n            }\n        })\n          if(!productAlreadyInCart){\n            cartItem.push({...product,count:1})\n          }\n        setCartItems([...cartItem]);\n        localStorage.setItem(\"cartItems\",JSON.stringify(cartItems));\n      },\n      handleSearch : (value) => {\n        setSearch(value);\n      },\n      handleChangeSort : (sort) => {\n          if(sort!==''){\n              const updated =  [...products].sort((a,b) => {\n                return (sort===\"lowest\")?(a.price > b.price?1:-1):(a.price < b.price?1:-1);\n              });\n             setfilteredProducts(updated);\n          }\n          else{\n            const updated = [...products].sort((a,b)=> { return (a.id < b.id ?1:-1)});\n            setfilteredProducts(updated);\n          }\n      },\n      onRemoveCart : (removeItem) => {\n        setCartItems([...cartItems].filter(item => {\n            if(item.id===removeItem.id && removeItem.count<=1)\n              return false;\n            else{\n              if(item.id===removeItem.id && removeItem.count>1)\n                item.count--;\n              return true;\n            }\n        }));\n        localStorage.setItem(\"cartItems\",JSON.stringify(cartItems));\n      },\n      cartItems,\n      search\n  \n}\n\n}"]},"metadata":{},"sourceType":"module"}