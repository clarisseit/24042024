{"ast":null,"code":"import { useState, useEffect, useReducer } from 'react';\nimport productReducer from '../reducer/productReducer';\nimport { FETCH_PRODUCTS, SEARCH_PRODUCTS, SORT_PRODUCTS, FETCH_CART_ITEMS, ADD_TO_CART, REMOVE_FROM_CART } from '../actions/types';\nexport default (() => {\n  const [search, setSearch] = useState(\"\");\n  const [cartItems, setCartItems] = useState([]);\n  const [state, dispatch] = useReducer(productReducer); //Products\n\n  useEffect(() => {\n    fetch(\"http://localhost:8000/products/\").then(res => res.json()).then(jsonResponse => {\n      dispatch({\n        type: FETCH_PRODUCTS,\n        payload: jsonResponse\n      });\n    });\n    return () => {};\n  }, []);\n  console.log(state, \"prod\"); //Local Storage\n\n  useEffect(() => {\n    if (localStorage.getItem(\"cartItems\")) {\n      dispatch({\n        type: FETCH_CART_ITEMS,\n        data: JSON.parse(localStorage.getItem(\"cartItems\"))\n      });\n    }\n\n    return () => {\n      localStorage.getItem(\"cartItems\");\n      console.log(\"clean up\");\n    };\n  }, []); //Search \n\n  useEffect(() => {\n    dispatch({\n      type: SEARCH_PRODUCTS,\n      data: search\n    });\n    return () => {\n      console.log(\"clean up\");\n    };\n  }, [search, state.products]);\n  return {\n    filteredProducts: state.filteredProducts,\n    cartItems: state.cartItems,\n    onAddCart: product => {\n      const cartItem = state.cartItems;\n      let productAlreadyInCart = false;\n      cartItem.forEach(item => {\n        if (item.id === product.id) {\n          productAlreadyInCart = true;\n          item.count++;\n        }\n      });\n\n      if (!productAlreadyInCart) {\n        cartItem.push({ ...product,\n          count: 1\n        });\n      }\n\n      dispatch({\n        type: FETCH_CART_ITEMS,\n        data: cartItem\n      });\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n    handleSearch: value => {\n      setSearch(value);\n    },\n    handleChangeSort: sort => {\n      dispatch({\n        type: SORT_PRODUCTS,\n        data: sort\n      });\n    },\n    onRemoveCart: removeItem => {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        data: removeItem\n      });\n      localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n    },\n    search\n  };\n});","map":{"version":3,"sources":["/Users/graj/projects/e-commerece/src/components/useProducts.js"],"names":["useState","useEffect","useReducer","productReducer","FETCH_PRODUCTS","SEARCH_PRODUCTS","SORT_PRODUCTS","FETCH_CART_ITEMS","ADD_TO_CART","REMOVE_FROM_CART","search","setSearch","cartItems","setCartItems","state","dispatch","fetch","then","res","json","jsonResponse","type","payload","console","log","localStorage","getItem","data","JSON","parse","products","filteredProducts","onAddCart","product","cartItem","productAlreadyInCart","forEach","item","id","count","push","setItem","stringify","handleSearch","value","handleChangeSort","sort","onRemoveCart","removeItem"],"mappings":"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","sourcesContent":["import {useState,useEffect,useReducer} from 'react';\nimport productReducer from '../reducer/productReducer';\nimport { FETCH_PRODUCTS, SEARCH_PRODUCTS, SORT_PRODUCTS, FETCH_CART_ITEMS, ADD_TO_CART, REMOVE_FROM_CART } from '../actions/types';\n\n\nexport default () => {\n\n\n  const [search, setSearch] = useState(\"\");\n  const [cartItems,setCartItems] = useState([]);\n\n  \n\n  const [state, dispatch] = useReducer(productReducer)\n\n//Products\n    useEffect(() => {\n      fetch(\"http://localhost:8000/products/\")\n        .then(res => res.json())\n        .then(jsonResponse => { \n            dispatch({type:FETCH_PRODUCTS,payload:jsonResponse});\n        })\n          return () => {\n           \n            }\n        }, []);\n\n        console.log(state,\"prod\")\n //Local Storage\n  useEffect(() => {\n    if(localStorage.getItem(\"cartItems\")){\n        dispatch({type:FETCH_CART_ITEMS,data:JSON.parse(localStorage.getItem(\"cartItems\"))})\n    }\n        return () => {\n          localStorage.getItem(\"cartItems\");\n          console.log(\"clean up\");\n        };\n    }, [])\n\n\n  //Search \n  useEffect(() => {\n    dispatch({type:SEARCH_PRODUCTS,data:search})\n\n    return () => {\n      console.log(\"clean up\");\n    };\n  }, [search,state.products])\n\n\n\nreturn{\n    filteredProducts:state.filteredProducts,\n    cartItems:state.cartItems,\n    onAddCart : (product) => {\n        const cartItem = state.cartItems;\n        let productAlreadyInCart = false;\n        cartItem.forEach(item => {\n            if(item.id===product.id){\n                productAlreadyInCart  = true;\n                item.count++;\n            }\n        })\n          if(!productAlreadyInCart){\n            cartItem.push({...product,count:1})\n          }\n        dispatch({type:FETCH_CART_ITEMS,data:cartItem});\n        localStorage.setItem(\"cartItems\",JSON.stringify(state.cartItems));\n      },\n      handleSearch : (value) => {\n        setSearch(value);\n      },\n      handleChangeSort : (sort) => {\n         dispatch({type:SORT_PRODUCTS,data:sort})\n      },\n      onRemoveCart : (removeItem) => {\n        dispatch({type:REMOVE_FROM_CART ,data:removeItem})\n        localStorage.setItem(\"cartItems\",JSON.stringify(cartItems));\n      },\n      search\n  \n}\n\n}"]},"metadata":{},"sourceType":"module"}