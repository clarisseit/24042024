{"ast":null,"code":"import { useState, useEffect, useReducer } from 'react';\nimport productReducer from '../reducer/productReducer';\nimport { FETCH_PRODUCTS, SEARCH_PRODUCTS, SORT_PRODUCTS, FETCH_CART_ITEMS, ADD_TO_CART, REMOVE_FROM_CART } from '../actions/types';\nexport default (() => {\n  const [search, setSearch] = useState(\"\");\n  const initialStateProducts = {\n    products: [],\n    filteredProducts: [],\n    search: \"\"\n  };\n  const [state, dispatch] = useReducer(productReducer, initialStateProducts); //Products\n\n  useEffect(() => {\n    fetch(\"http://localhost:8000/products/\").then(res => res.json()).then(jsonResponse => {\n      dispatch({\n        type: FETCH_PRODUCTS,\n        payload: jsonResponse\n      });\n    });\n    return () => {};\n  }, []);\n  console.log(state, \"prod\"); //Local Storage\n  //Search \n\n  useEffect(() => {\n    dispatch({\n      type: SEARCH_PRODUCTS,\n      data: search\n    });\n    return () => {\n      console.log(\"clean up\");\n    };\n  }, [search, state.products]);\n  return {\n    filteredProducts: state.filteredProducts,\n    cartItems: state.cartItems,\n    onAddCart: product => {},\n    handleSearch: value => {\n      setSearch(value);\n    },\n    handleChangeSort: sort => {\n      dispatch({\n        type: SORT_PRODUCTS,\n        data: sort\n      });\n    },\n    onRemoveCart: removeItem => {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        data: removeItem\n      });\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n    search\n  };\n});","map":{"version":3,"sources":["/Users/graj/projects/e-commerece/src/components/useProducts.js"],"names":["useState","useEffect","useReducer","productReducer","FETCH_PRODUCTS","SEARCH_PRODUCTS","SORT_PRODUCTS","FETCH_CART_ITEMS","ADD_TO_CART","REMOVE_FROM_CART","search","setSearch","initialStateProducts","products","filteredProducts","state","dispatch","fetch","then","res","json","jsonResponse","type","payload","console","log","data","cartItems","onAddCart","product","handleSearch","value","handleChangeSort","sort","onRemoveCart","removeItem","localStorage","setItem","JSON","stringify"],"mappings":"AAAA,SAAQA,QAAR,EAAiBC,SAAjB,EAA2BC,UAA3B,QAA4C,OAA5C;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,SAASC,cAAT,EAAyBC,eAAzB,EAA0CC,aAA1C,EAAyDC,gBAAzD,EAA2EC,WAA3E,EAAwFC,gBAAxF,QAAgH,kBAAhH;AAGA,gBAAe,MAAM;AAGnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMY,oBAAoB,GAAG;AACzBC,IAAAA,QAAQ,EAAC,EADgB;AAEzBC,IAAAA,gBAAgB,EAAC,EAFQ;AAGzBJ,IAAAA,MAAM,EAAC;AAHkB,GAA7B;AAMA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBd,UAAU,CAACC,cAAD,EAAiBS,oBAAjB,CAApC,CAXmB,CAarB;;AACIX,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,YAAY,IAAI;AAClBL,MAAAA,QAAQ,CAAC;AAACM,QAAAA,IAAI,EAAClB,cAAN;AAAqBmB,QAAAA,OAAO,EAACF;AAA7B,OAAD,CAAR;AACH,KAJH;AAKI,WAAO,MAAM,CAEV,CAFH;AAGD,GATI,EASF,EATE,CAAT;AAWIG,EAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ,EAAkB,MAAlB,EAzBa,CA0BpB;AAIC;;AACAd,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ,CAAC;AAACM,MAAAA,IAAI,EAACjB,eAAN;AAAsBqB,MAAAA,IAAI,EAAChB;AAA3B,KAAD,CAAR;AAEA,WAAO,MAAM;AACXc,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,KAFD;AAGD,GANQ,EAMN,CAACf,MAAD,EAAQK,KAAK,CAACF,QAAd,CANM,CAAT;AAUF,SAAM;AACFC,IAAAA,gBAAgB,EAACC,KAAK,CAACD,gBADrB;AAEFa,IAAAA,SAAS,EAACZ,KAAK,CAACY,SAFd;AAGFC,IAAAA,SAAS,EAAIC,OAAD,IAAa,CAEtB,CALD;AAMAC,IAAAA,YAAY,EAAIC,KAAD,IAAW;AACxBpB,MAAAA,SAAS,CAACoB,KAAD,CAAT;AACD,KARD;AASAC,IAAAA,gBAAgB,EAAIC,IAAD,IAAU;AAC1BjB,MAAAA,QAAQ,CAAC;AAACM,QAAAA,IAAI,EAAChB,aAAN;AAAoBoB,QAAAA,IAAI,EAACO;AAAzB,OAAD,CAAR;AACF,KAXD;AAYAC,IAAAA,YAAY,EAAIC,UAAD,IAAgB;AAC7BnB,MAAAA,QAAQ,CAAC;AAACM,QAAAA,IAAI,EAACb,gBAAN;AAAwBiB,QAAAA,IAAI,EAACS;AAA7B,OAAD,CAAR;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAiCC,IAAI,CAACC,SAAL,CAAexB,KAAK,CAACY,SAArB,CAAjC;AACD,KAfD;AAgBAjB,IAAAA;AAhBA,GAAN;AAoBC,CA7DD","sourcesContent":["import {useState,useEffect,useReducer} from 'react';\nimport productReducer from '../reducer/productReducer';\nimport { FETCH_PRODUCTS, SEARCH_PRODUCTS, SORT_PRODUCTS, FETCH_CART_ITEMS, ADD_TO_CART, REMOVE_FROM_CART } from '../actions/types';\n\n\nexport default () => {\n\n\n  const [search, setSearch] = useState(\"\");\n\n  const initialStateProducts = {\n      products:[],\n      filteredProducts:[],\n      search:\"\"\n    }\n\n  const [state, dispatch] = useReducer(productReducer, initialStateProducts)\n\n//Products\n    useEffect(() => {\n      fetch(\"http://localhost:8000/products/\")\n        .then(res => res.json())\n        .then(jsonResponse => { \n            dispatch({type:FETCH_PRODUCTS,payload:jsonResponse});\n        })\n          return () => {\n           \n            }\n        }, []);\n\n        console.log(state,\"prod\")\n //Local Storage\n \n\n\n  //Search \n  useEffect(() => {\n    dispatch({type:SEARCH_PRODUCTS,data:search})\n\n    return () => {\n      console.log(\"clean up\");\n    };\n  }, [search,state.products])\n\n\n\nreturn{\n    filteredProducts:state.filteredProducts,\n    cartItems:state.cartItems,\n    onAddCart : (product) => {\n        \n      },\n      handleSearch : (value) => {\n        setSearch(value);\n      },\n      handleChangeSort : (sort) => {\n         dispatch({type:SORT_PRODUCTS,data:sort})\n      },\n      onRemoveCart : (removeItem) => {\n        dispatch({type:REMOVE_FROM_CART ,data:removeItem})\n        localStorage.setItem(\"cartItems\",JSON.stringify(state.cartItems));\n      },\n      search\n  \n}\n\n}"]},"metadata":{},"sourceType":"module"}