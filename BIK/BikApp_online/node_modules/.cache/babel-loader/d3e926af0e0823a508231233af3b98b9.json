{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport fire from '../config/fire';\nimport * as Firebase from 'firebase/app';\nimport History from './History';\nexport default (() => {\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setfilteredProducts] = useState([]);\n  const [cartItems, setCartItems] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [usrLogin, setUsr_Login] = useState(\"\");\n  const [pwdLogin, setPwd_Login] = useState(\"\");\n  const [cnfPwdLogin, setCnfPwd_Login] = useState(\"\");\n  const [guestCart, setGuestCart] = useState([]);\n  const [user, setUser] = useState({});\n  const db = fire.firestore(); //Products\n\n  useEffect(() => {\n    db.collection('products').get().then(response => {\n      const data = response.docs.map(doc => {\n        const productData = doc.data();\n        productData.id = doc.id;\n        return productData;\n      });\n      setProducts(data);\n      setfilteredProducts(data);\n    });\n    return () => {};\n  }, []);\n  useEffect(() => {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        let userCartItem = db.collection(\"User\").doc(user.uid);\n        userCartItem.get().then(function (doc) {\n          if (doc.exists) {\n            setCartItems(doc.data().cartItems);\n          }\n        }).catch(function (error) {\n          console.log(\"Error getting document:\", error);\n        });\n        setUser({\n          userId: user.uid,\n          email: user.email\n        });\n      } else {\n        fire.auth().signInAnonymously();\n        setUser({\n          userId: null,\n          cartItems: [],\n          previousOrders: {}\n        });\n      }\n    });\n    return () => {};\n  }, []);\n  console.log(cartItems, \"Asd\"); //Search \n\n  useEffect(() => {\n    setfilteredProducts([...products].filter(product => {\n      return product.title.toLowerCase().includes(search.toLowerCase());\n    }));\n    return () => {};\n  }, [search, products]);\n  return {\n    filteredProducts: filteredProducts,\n    cartItems: cartItems,\n    search: search,\n    onAddCart: async product => {\n      const cartItem = cartItems;\n      let productAlreadyInCart = false;\n      cartItem.forEach(item => {\n        if (item.id === product.id) {\n          productAlreadyInCart = true;\n          item.count++;\n        }\n      });\n\n      if (!productAlreadyInCart) {\n        cartItem.push({ ...product,\n          count: 1\n        });\n      }\n\n      setCartItems([...cartItem]);\n      if (user.userId !== null) await db.collection('User/').doc(user.userId).set({\n        cartItems: cartItem\n      });\n    },\n    handleSearch: value => {\n      setSearch(value);\n    },\n    handleChangeSort: sort => {\n      if (sort !== '') {\n        const updated = [...products].sort((a, b) => {\n          return sort === \"lowest\" ? a.price > b.price ? 1 : -1 : a.price < b.price ? 1 : -1;\n        });\n        setfilteredProducts(updated);\n      } else {\n        const updated = [...products].sort((a, b) => {\n          return a.id < b.id ? 1 : -1;\n        });\n        setfilteredProducts(updated);\n      }\n    },\n    onRemoveCart: async removeItem => {\n      const update = [...cartItems].filter(item => {\n        if (item.id === removeItem.id && removeItem.count <= 1) return false;else {\n          if (item.id === removeItem.id && removeItem.count > 1) item.count--;\n          return true;\n        }\n      });\n      setCartItems(update);\n      if (user.userId !== null) await db.collection('User/').doc(user.userId).update({\n        cartItems: update\n      });\n    },\n    userLoginChange: value => {\n      setUsr_Login(value);\n    },\n    pwdLoginChange: value => {\n      setPwd_Login(value);\n    },\n    cnfPwdLoginChange: value => {\n      setCnfPwd_Login(value);\n    },\n    login: e => {\n      e.preventDefault();\n      console.log(user.userId, user.email, \"use\");\n      fire.auth().signInWithEmailAndPassword(usrLogin, pwdLogin).then(res => {\n        if (res) {\n          History.push('/products');\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    signUp: e => {\n      e.preventDefault();\n\n      if (pwdLogin === cnfPwdLogin) {\n        if (user.email !== null) {\n          fire.auth().createUserWithEmailAndPassword(usrLogin, pwdLogin).then(res => {\n            if (res) {\n              History.push('/products');\n            }\n          }).catch(err => {\n            console.log(err);\n          });\n        } else {\n          const cred = Firebase.auth.EmailAuthProvider.credential(usrLogin, pwdLogin);\n          Firebase.auth().currentUser.linkWithCredential(cred);\n          History.push('/products');\n          setUser({ ...user,\n            email: usrLogin\n          });\n        }\n      } else {\n        alert(\"pwd not match\");\n      }\n    },\n    logout: () => {\n      fire.auth().signOut();\n      setCartItems([]);\n    },\n    user: user\n  };\n});","map":{"version":3,"sources":["/Users/graj/projects/e-commerece/src/components/useProducts.js"],"names":["useState","useEffect","fire","Firebase","History","products","setProducts","filteredProducts","setfilteredProducts","cartItems","setCartItems","search","setSearch","usrLogin","setUsr_Login","pwdLogin","setPwd_Login","cnfPwdLogin","setCnfPwd_Login","guestCart","setGuestCart","user","setUser","db","firestore","collection","get","then","response","data","docs","map","doc","productData","id","auth","onAuthStateChanged","userCartItem","uid","exists","catch","error","console","log","userId","email","signInAnonymously","previousOrders","filter","product","title","toLowerCase","includes","onAddCart","cartItem","productAlreadyInCart","forEach","item","count","push","set","handleSearch","value","handleChangeSort","sort","updated","a","b","price","onRemoveCart","removeItem","update","userLoginChange","pwdLoginChange","cnfPwdLoginChange","login","e","preventDefault","signInWithEmailAndPassword","res","err","signUp","createUserWithEmailAndPassword","cred","EmailAuthProvider","credential","currentUser","linkWithCredential","alert","logout","signOut"],"mappings":"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","sourcesContent":["import {useState,useEffect} from 'react';\nimport fire from '../config/fire';\nimport * as Firebase from 'firebase/app';\nimport History from './History';\n\n\n\nexport default () => {\n\n  const [products,setProducts] = useState([])\n  const [filteredProducts,setfilteredProducts] = useState([])\n  const [cartItems,setCartItems] = useState([])\n  const [search, setSearch] = useState(\"\");\n  const [usrLogin,setUsr_Login] = useState(\"\");\n  const [pwdLogin,setPwd_Login] = useState(\"\");\n  const [cnfPwdLogin,setCnfPwd_Login] = useState(\"\");\n  const [guestCart,setGuestCart] = useState([]);\n  const [user,setUser] = useState({});\n\n  const db = fire.firestore();\n\n\n    //Products\n    useEffect(() => {\n        db.collection('products')\n        .get()\n        .then(response => {\n            const data = response.docs.map(doc => {\n                const productData = doc.data();\n                productData.id=doc.id;\n                return productData\n            });\n                setProducts(data)\n                setfilteredProducts(data)\n            })\n         return () => {\n    \n        }\n    }, []);\n\n\n    useEffect(() => {\n        fire.auth().onAuthStateChanged((user)=>{\n            if(user)\n            {\n            let userCartItem = db.collection(\"User\").doc(user.uid);\n            userCartItem.get().then(function(doc) {\n                if (doc.exists) {\n                    setCartItems(doc.data().cartItems);\n                } \n            }).catch(function(error) {\n                console.log(\"Error getting document:\", error);\n            });\n            setUser({userId:user.uid,email:user.email})\n            }\n            else{\n             fire.auth().signInAnonymously()\n                 \n              setUser({\n                       userId : null,\n                       cartItems:[],\n                       previousOrders:{}\n                })\n            }\n          })\n          return () => {\n              \n          }\n      }, [])\n    \n      console.log(cartItems,\"Asd\");\n\n \n\n\n        //Search \n        useEffect(() => {\n            setfilteredProducts(\n                    [...products].filter(product => {\n                        return product.title.toLowerCase().includes(search.toLowerCase());\n                    })\n            )\n            return () => {\n\n            };\n        }, [search,products])\n\n  \n  \n\n\n\nreturn{\n    filteredProducts:filteredProducts,\n    cartItems:cartItems,\n    search:search,\n\n    onAddCart : async(product) => {\n            const cartItem = cartItems;\n            let productAlreadyInCart = false;\n            cartItem.forEach(item => {\n                if(item.id===product.id){\n                    productAlreadyInCart  = true;\n                    item.count++;\n                }\n            })\n            if(!productAlreadyInCart){\n                cartItem.push({...product,count:1})\n            }\n            setCartItems([...cartItem])\n            if(user.userId!==null)\n                await db.collection('User/').doc(user.userId).set({cartItems:cartItem});\n    },\n      handleSearch : (value) => {\n        setSearch(value);\n      },\n\n      handleChangeSort : (sort) => {\n        if(sort!==''){\n            const updated =  [...products].sort((a,b) => {\n              return (sort===\"lowest\")?(a.price > b.price?1:-1):(a.price < b.price?1:-1);\n            });\n            setfilteredProducts(updated);\n        }\n        else{\n          const updated = [...products].sort((a,b)=> { return (a.id < b.id ?1:-1)});\n          setfilteredProducts(updated);\n        }\n      },\n\n      onRemoveCart : async (removeItem) => {\n            const update =  [...cartItems].filter(item => {\n                    if(item.id===removeItem.id && removeItem.count<=1)\n                    return false;\n                    else{\n                    if(item.id===removeItem.id && removeItem.count>1)\n                        item.count--;\n                    return true;\n                    }\n                });\n                setCartItems(update);\n                if(user.userId!==null)\n                    await db.collection('User/').doc(user.userId).update({cartItems:update});\n      },\n\n      userLoginChange:(value) => {\n          setUsr_Login(value);\n      },\n\n      pwdLoginChange:(value) =>{\n          setPwd_Login(value)\n      },\n\n      cnfPwdLoginChange:(value) => {\n          setCnfPwd_Login(value)\n      },\n\n      login:(e)=>{\n          e.preventDefault();\n          console.log(user.userId,user.email,\"use\")\n            fire.auth().signInWithEmailAndPassword(usrLogin,pwdLogin).then((res)=>{\n                if(res){\n                    History.push('/products');\n\n                }\n            })\n            .catch((err)=>{\n                console.log(err)\n            })\n      },\n\n      signUp:(e)=>{\n            e.preventDefault();\n            if(pwdLogin === cnfPwdLogin){\n                if(user.email!==null){\n                    fire.auth().createUserWithEmailAndPassword(usrLogin,pwdLogin).then((res)=>{\n                    if(res){\n                        History.push('/products')\n                    }\n                    })\n                    .catch((err)=>{\n                        console.log(err)\n                    })\n                }\n                else\n                {\n                const cred = Firebase.auth.EmailAuthProvider.credential(usrLogin,pwdLogin)\n                Firebase.auth().currentUser.linkWithCredential(cred);\n                History.push('/products')\n                setUser({...user,email:usrLogin})\n                }\n            }\n            else{\n                alert(\"pwd not match\");\n            }\n        },\n        logout:() => {\n            fire.auth().signOut();\n            setCartItems([])\n        },\n        user:user\n  \n}\n\n}"]},"metadata":{},"sourceType":"module"}