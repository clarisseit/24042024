{"ast":null,"code":"import { useState, useEffect, useReducer } from 'react';\nimport productReducer from '../reducer/productReducer';\nimport { FETCH_PRODUCTS, SEARCH_PRODUCTS, SORT_PRODUCTS, FETCH_CART_ITEMS, PRODUCTS_REDIRECT } from '../actions/types';\nimport fire from '../config/fire';\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport History from './History';\nexport default (() => {\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setfilteredProducts] = useState([]);\n  const [cartItems, setCartItems] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [usrLogin, setUsr_Login] = useState(\"\");\n  const [pwdLogin, setPwd_Login] = useState(\"\");\n  const [cnfPwdLogin, setCnfPwd_Login] = useState(\"\");\n  const initialStateProducts = {\n    products: [],\n    filteredProducts: [],\n    search: \"\",\n    cartItems: []\n  };\n  const [state, dispatch] = useReducer(productReducer, initialStateProducts); //Products\n\n  useEffect(() => {\n    fetch(\"http://localhost:8000/products/\").then(res => res.json()).then(jsonResponse => {\n      setProducts(jsonResponse);\n      setfilteredProducts(jsonResponse);\n    });\n    return () => {};\n  }, []); //Local Storage\n\n  useEffect(() => {\n    if (localStorage.getItem(\"cartItems\")) {\n      setCartItems(JSON.parse(localStorage.getItem(\"cartItems\")));\n    }\n\n    return () => {\n      localStorage.getItem(\"cartItems\");\n    };\n  }, []); //Search \n\n  useEffect(() => {\n    setfilteredProducts([...products].filter(product => {\n      return product.title.toLowerCase().includes(action.data.toLowerCase());\n    }));\n    return () => {\n      console.log(\"clean up\");\n    };\n  }, [search, state.products]);\n  return {\n    filteredProducts: state.filteredProducts,\n    cartItems: state.cartItems,\n    onAddCart: product => {\n      const cartItem = state.cartItems;\n      let productAlreadyInCart = false;\n      cartItem.forEach(item => {\n        if (item.id === product.id) {\n          productAlreadyInCart = true;\n          item.count++;\n        }\n      });\n\n      if (!productAlreadyInCart) {\n        cartItem.push({ ...product,\n          count: 1\n        });\n      }\n\n      dispatch({\n        type: FETCH_CART_ITEMS,\n        data: cartItem\n      });\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n    handleSearch: value => {\n      setSearch(value);\n    },\n    handleChangeSort: sort => {\n      dispatch({\n        type: SORT_PRODUCTS,\n        data: sort\n      });\n    },\n    onRemoveCart: removeItem => {\n      const update = [...state.cartItems].filter(item => {\n        if (item.id === removeItem.id && removeItem.count <= 1) return false;else {\n          if (item.id === removeItem.id && removeItem.count > 1) item.count--;\n          return true;\n        }\n      });\n      dispatch({\n        type: FETCH_CART_ITEMS,\n        data: update\n      });\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n    search: search,\n    userLoginChange: value => {\n      setUsr_Login(value);\n    },\n    pwdLoginChange: value => {\n      setPwd_Login(value);\n    },\n    cnfPwdLoginChange: value => {\n      setCnfPwd_Login(value);\n    },\n    login: e => {\n      e.preventDefault();\n      fire.auth().signInWithEmailAndPassword(usrLogin, pwdLogin).then(res => {\n        if (res) {\n          History.push('/products');\n        }\n\n        console.log(res, \"sdi\");\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    signUp: e => {\n      e.preventDefault();\n\n      if (pwdLogin === cnfPwdLogin) {\n        fire.auth().createUserWithEmailAndPassword(usrLogin, pwdLogin).then(res => {\n          if (res) {\n            dispatch({\n              type: PRODUCTS_REDIRECT,\n              data: true\n            });\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        alert(\"pwd didnt match\");\n      }\n    }\n  };\n});","map":{"version":3,"sources":["/Users/graj/projects/e-commerece/src/components/useProducts.js"],"names":["useState","useEffect","useReducer","productReducer","FETCH_PRODUCTS","SEARCH_PRODUCTS","SORT_PRODUCTS","FETCH_CART_ITEMS","PRODUCTS_REDIRECT","fire","React","Redirect","History","products","setProducts","filteredProducts","setfilteredProducts","cartItems","setCartItems","search","setSearch","usrLogin","setUsr_Login","pwdLogin","setPwd_Login","cnfPwdLogin","setCnfPwd_Login","initialStateProducts","state","dispatch","fetch","then","res","json","jsonResponse","localStorage","getItem","JSON","parse","filter","product","title","toLowerCase","includes","action","data","console","log","onAddCart","cartItem","productAlreadyInCart","forEach","item","id","count","push","type","setItem","stringify","handleSearch","value","handleChangeSort","sort","onRemoveCart","removeItem","update","userLoginChange","pwdLoginChange","cnfPwdLoginChange","login","e","preventDefault","auth","signInWithEmailAndPassword","catch","err","signUp","createUserWithEmailAndPassword","alert"],"mappings":"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","sourcesContent":["import {useState,useEffect,useReducer} from 'react';\nimport productReducer from '../reducer/productReducer';\nimport { FETCH_PRODUCTS, SEARCH_PRODUCTS, SORT_PRODUCTS, FETCH_CART_ITEMS, PRODUCTS_REDIRECT} from '../actions/types';\nimport fire from '../config/fire';\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport History from './History';\n\n\n\nexport default () => {\n\n  const [products,setProducts] = useState([])\n  const [filteredProducts,setfilteredProducts] = useState([])\n  const [cartItems,setCartItems] = useState([])\n  const [search, setSearch] = useState(\"\");\n  const [usrLogin,setUsr_Login] = useState(\"\");\n  const [pwdLogin,setPwd_Login] = useState(\"\");\n  const [cnfPwdLogin,setCnfPwd_Login] = useState(\"\");\n\n\n  const initialStateProducts = {\n      products:[],\n      filteredProducts:[],\n      search:\"\",\n      cartItems:[]\n    }\n\n  const [state, dispatch] = useReducer(productReducer, initialStateProducts)\n\n    //Products\n    useEffect(() => {\n      fetch(\"http://localhost:8000/products/\")\n        .then(res => res.json())\n           .then(jsonResponse => { \n                setProducts(jsonResponse)\n                setfilteredProducts(jsonResponse)\n            })\n         return () => {\n    \n        }\n    }, []);\n\n //Local Storage\n  useEffect(() => {\n        if(localStorage.getItem(\"cartItems\")){\n            setCartItems(JSON.parse(localStorage.getItem(\"cartItems\")))\n        }\n        return () => {\n          localStorage.getItem(\"cartItems\");\n        };\n    }, [])\n\n\n  //Search \n  useEffect(() => {\n      setfilteredProducts(\n            [...products].filter(product => {\n                return product.title.toLowerCase().includes(action.data.toLowerCase());\n            })\n      )\n    return () => {\n      console.log(\"clean up\");\n    };\n  }, [search,state.products])\n\n\n  \n\n\n\nreturn{\n    filteredProducts:state.filteredProducts,\n    cartItems:state.cartItems,\n    onAddCart : (product) => {\n        const cartItem = state.cartItems;\n        let productAlreadyInCart = false;\n        cartItem.forEach(item => {\n            if(item.id===product.id){\n                productAlreadyInCart  = true;\n                item.count++;\n            }\n        })\n          if(!productAlreadyInCart){\n            cartItem.push({...product,count:1})\n          }\n        dispatch({type:FETCH_CART_ITEMS,data:cartItem});\n        localStorage.setItem(\"cartItems\",JSON.stringify(state.cartItems));\n      },\n      handleSearch : (value) => {\n        setSearch(value);\n      },\n      handleChangeSort : (sort) => {\n         dispatch({type:SORT_PRODUCTS,data:sort})\n      },\n      onRemoveCart : (removeItem) => {\n       const update =  [...state.cartItems].filter(item => {\n            if(item.id===removeItem.id && removeItem.count<=1)\n              return false;\n            else{\n              if(item.id===removeItem.id && removeItem.count>1)\n                item.count--;\n              return true;\n            }\n        });\n        dispatch({type:FETCH_CART_ITEMS ,data:update})\n        localStorage.setItem(\"cartItems\",JSON.stringify(state.cartItems));\n      },\n      search:search,\n      userLoginChange:(value) => {\n          setUsr_Login(value);\n      },\n      pwdLoginChange:(value) =>{\n          setPwd_Login(value)\n      },\n      cnfPwdLoginChange:(value) => {\n          setCnfPwd_Login(value)\n      },\n      login:(e)=>{\n          e.preventDefault();\n          fire.auth().signInWithEmailAndPassword(usrLogin,pwdLogin).then((res)=>{\n              if(res){\n                  History.push('/products')\n              }\n              console.log(res,\"sdi\")\n          })\n          .catch((err)=>{\n            console.log(err)\n          })\n      },\n      signUp:(e)=>{\n        e.preventDefault();\n        if(pwdLogin === cnfPwdLogin){\n        fire.auth().createUserWithEmailAndPassword(usrLogin,pwdLogin).then((res)=>{\n          if(res){\n            dispatch({type:PRODUCTS_REDIRECT,data:true});\n          }\n        })\n        .catch((err)=>{\n          console.log(err)\n        })\n    }\n    else{\n        alert(\"pwd didnt match\")\n    }\n    }\n  \n}\n\n}"]},"metadata":{},"sourceType":"module"}