{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport fire from '../config/fire';\nimport * as Firebase from 'firebase/app';\nimport History from './History';\nexport default (() => {\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setfilteredProducts] = useState([]);\n  const [cartItems, setCartItems] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [usrLogin, setUsr_Login] = useState(\"\");\n  const [pwdLogin, setPwd_Login] = useState(\"\");\n  const [cnfPwdLogin, setCnfPwd_Login] = useState(\"\");\n  const [guestCart, setGuestCart] = useState([]);\n  const [user, setUser] = useState({});\n  const [billAddress, setBillAddress] = useState({\n    fullName: '',\n    address1: '',\n    address2: '',\n    city: '',\n    cityState: '',\n    country: '',\n    pincode: ''\n  });\n  const db = fire.firestore(); //Products\n\n  useEffect(() => {\n    db.collection('products').get().then(response => {\n      const data = response.docs.map(doc => {\n        const productData = doc.data();\n        productData.id = doc.id;\n        return productData;\n      });\n      setProducts(data);\n      setfilteredProducts(data);\n    });\n    return () => {};\n  }, []);\n  useEffect(() => {\n    const unsubscribe = fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        let userCartItem = db.collection(\"User\").doc(user.uid);\n        userCartItem.get().then(function (doc) {\n          if (doc.exists) {\n            setCartItems(doc.data().cartItems);\n          }\n        }).catch(function (error) {\n          console.log(\"Error getting document:\", error);\n        });\n        let userAddress = db.collection(\"billingAddress\").doc(user.uid);\n        userAddress.get().then(function (doc) {\n          if (doc.exists) {\n            setBillAddress(doc.data().billingAddress);\n          }\n        }).catch(function (err) {\n          console.log(\"Error getting document:\", err);\n        });\n        setUser({\n          userId: user.uid,\n          email: user.email\n        });\n      } else {\n        fire.auth().signInAnonymously();\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, [user.uid]); //Search \n\n  useEffect(() => {\n    setfilteredProducts([...products].filter(product => {\n      return product.title.toLowerCase().includes(search.toLowerCase());\n    }));\n    return () => {};\n  }, [search, products]);\n  useEffect(() => {\n    if (user.email === null) setGuestCart(cartItems);\n    return () => {};\n  }, [cartItems]);\n\n  let resultFilter = (temp1, temp2) => {\n    return temp1.filter(temp1 => !temp2.some(temp2 => temp1.id === temp2.id));\n  };\n\n  console.log(billAddress, \"asd\");\n  return {\n    filteredProducts: filteredProducts,\n    cartItems: cartItems,\n    search: search,\n    onAddCart: async product => {\n      const cartItem = cartItems;\n      let productAlreadyInCart = false;\n      cartItem.forEach(item => {\n        if (item.id === product.id) {\n          productAlreadyInCart = true;\n          item.count++;\n        }\n      });\n\n      if (!productAlreadyInCart) {\n        cartItem.push({ ...product,\n          count: 1\n        });\n      }\n\n      setCartItems([...cartItem]);\n      if (user.userId !== null) await db.collection('User/').doc(user.userId).set({\n        cartItems: cartItem\n      });\n    },\n    handleSearch: value => {\n      setSearch(value);\n    },\n    handleChangeSort: sort => {\n      if (sort !== '') {\n        const updated = [...products].sort((a, b) => {\n          return sort === \"lowest\" ? a.price > b.price ? 1 : -1 : a.price < b.price ? 1 : -1;\n        });\n        setfilteredProducts(updated);\n      } else {\n        const updated = [...products].sort((a, b) => {\n          return a.id < b.id ? 1 : -1;\n        });\n        setfilteredProducts(updated);\n      }\n    },\n    onRemoveCart: async removeItem => {\n      const update = [...cartItems].filter(item => {\n        if (item.id === removeItem.id && removeItem.count <= 1) return false;else {\n          if (item.id === removeItem.id && removeItem.count > 1) item.count--;\n          return true;\n        }\n      });\n      setCartItems(update);\n      if (user.userId !== null) await db.collection('User/').doc(user.userId).update({\n        cartItems: update\n      });\n    },\n    userLoginChange: value => {\n      setUsr_Login(value);\n    },\n    pwdLoginChange: value => {\n      setPwd_Login(value);\n    },\n    cnfPwdLoginChange: value => {\n      setCnfPwd_Login(value);\n    },\n    login: e => {\n      e.preventDefault();\n      fire.auth().signInWithEmailAndPassword(usrLogin, pwdLogin).then(res => {\n        if (res) {\n          let userCartItem = db.collection(\"User\").doc(res.user.uid);\n          userCartItem.get().then(function (doc) {\n            if (doc.exists) {\n              let upc = doc.data().cartItems;\n\n              if (user.email === null) {\n                let update = [];\n                upc.forEach(function (cartItem) {\n                  guestCart.forEach(function (guestCar) {\n                    if (cartItem.title === guestCar.title) {\n                      guestCar.count = cartItem.count + guestCar.count;\n                      update.push(guestCar);\n                    }\n                  });\n                });\n                resultFilter(upc, guestCart).forEach(function (val) {\n                  update.push(val);\n                });\n                resultFilter(guestCart, upc).forEach(function (val) {\n                  update.push(val);\n                });\n                db.collection('User/').doc(res.user.uid).set({\n                  cartItems: update\n                });\n                History.push('/');\n              }\n            }\n          }).catch(function (error) {\n            console.log(\"Error getting document:\", error);\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    signUp: e => {\n      e.preventDefault();\n\n      if (pwdLogin === cnfPwdLogin) {\n        if (user.email !== null) {\n          fire.auth().createUserWithEmailAndPassword(usrLogin, pwdLogin).then(res => {\n            if (res) {\n              History.push('/products');\n            }\n          }).catch(err => {\n            console.log(err);\n          });\n        } else {\n          const cred = Firebase.auth.EmailAuthProvider.credential(usrLogin, pwdLogin);\n          Firebase.auth().currentUser.linkWithCredential(cred);\n          History.push('/products');\n          setUser({ ...user,\n            email: usrLogin\n          });\n        }\n      } else {\n        alert(\"pwd not match\");\n      }\n    },\n    logout: () => {\n      fire.auth().signOut();\n      setCartItems([]);\n    },\n    user: user,\n    saveAddress: (value, field) => {\n      setBillAddress({ ...billAddress,\n        [field]: value\n      });\n    },\n    submitAddress: e => {\n      e.preventDefault();\n      db.collection('billingAddress/').doc(user.userId).set({\n        billAddress\n      });\n    },\n    billAddress: billAddress\n  };\n});","map":{"version":3,"sources":["/Users/graj/projects/e-commerece/src/components/useProducts.js"],"names":["useState","useEffect","fire","Firebase","History","products","setProducts","filteredProducts","setfilteredProducts","cartItems","setCartItems","search","setSearch","usrLogin","setUsr_Login","pwdLogin","setPwd_Login","cnfPwdLogin","setCnfPwd_Login","guestCart","setGuestCart","user","setUser","billAddress","setBillAddress","fullName","address1","address2","city","cityState","country","pincode","db","firestore","collection","get","then","response","data","docs","map","doc","productData","id","unsubscribe","auth","onAuthStateChanged","userCartItem","uid","exists","catch","error","console","log","userAddress","billingAddress","err","userId","email","signInAnonymously","filter","product","title","toLowerCase","includes","resultFilter","temp1","temp2","some","onAddCart","cartItem","productAlreadyInCart","forEach","item","count","push","set","handleSearch","value","handleChangeSort","sort","updated","a","b","price","onRemoveCart","removeItem","update","userLoginChange","pwdLoginChange","cnfPwdLoginChange","login","e","preventDefault","signInWithEmailAndPassword","res","upc","guestCar","val","signUp","createUserWithEmailAndPassword","cred","EmailAuthProvider","credential","currentUser","linkWithCredential","alert","logout","signOut","saveAddress","field","submitAddress"],"mappings":"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","sourcesContent":["import {useState,useEffect} from 'react';\nimport fire from '../config/fire';\nimport * as Firebase from 'firebase/app';\nimport History from './History';\n\n\n\nexport default () => {\n\n  const [products,setProducts] = useState([])\n  const [filteredProducts,setfilteredProducts] = useState([])\n  const [cartItems,setCartItems] = useState([])\n  const [search, setSearch] = useState(\"\");\n  const [usrLogin,setUsr_Login] = useState(\"\");\n  const [pwdLogin,setPwd_Login] = useState(\"\");\n  const [cnfPwdLogin,setCnfPwd_Login] = useState(\"\");\n  const [guestCart,setGuestCart] = useState([]);\n  const [user,setUser] = useState({});\n  const [billAddress,setBillAddress] = useState({\n                                                    fullName:'',\n                                                    address1:'',\n                                                    address2:'',\n                                                    city:'',\n                                                    cityState:'',\n                                                    country:'',\n                                                    pincode:''\n                                                });\n  \n\n\n  const db = fire.firestore();\n\n\n    //Products\n    useEffect(() => {\n        db.collection('products')\n        .get()\n        .then(response => {\n            const data = response.docs.map(doc => {\n                const productData = doc.data();\n                productData.id=doc.id;\n                return productData\n            });\n                setProducts(data)\n                setfilteredProducts(data)\n            })\n         return () => {\n    \n        }\n    }, []);\n\n\n    useEffect(() => {\n\n       const unsubscribe = fire.auth().onAuthStateChanged((user)=>{\n         if(user)\n            {\n            let userCartItem = db.collection(\"User\").doc(user.uid);\n\n            userCartItem.get().then(function(doc) {\n                if (doc.exists) {\n                        setCartItems(doc.data().cartItems);\n                } \n            }).catch(function(error) {\n                console.log(\"Error getting document:\", error);\n            });\n\n            let userAddress = db.collection(\"billingAddress\").doc(user.uid);\n                userAddress.get().then(function(doc){\n                    if(doc.exists) {\n                        setBillAddress(doc.data().billingAddress)\n                    }\n                }).catch(function(err){\n                    console.log(\"Error getting document:\", err);\n                })\n            setUser({userId:user.uid,email:user.email})\n            }\n            else{\n             fire.auth().signInAnonymously()\n                 \n            }\n       \n          })\n          return () => { \n              unsubscribe();\n          }\n      }, [user.uid])\n\n\n        \n\n        //Search \n        useEffect(() => {\n            setfilteredProducts(\n                    [...products].filter(product => {\n                        return product.title.toLowerCase().includes(search.toLowerCase());\n                    })\n            )\n            return () => {\n\n            };\n        }, [search,products])\n\n  \n     useEffect(() => {\n        \n         if(user.email===null)\n            setGuestCart(cartItems)\n         return () => {\n       \n         }\n     }, [cartItems])\n\n\n     let resultFilter = (temp1, temp2) => {\n        return temp1.filter(temp1 =>\n          !temp2.some(\n            temp2 => temp1.id === temp2.id\n          )\n        );\n      };\n\n      console.log(billAddress,\"asd\")\n\n\n      \nreturn{\n    filteredProducts:filteredProducts,\n    cartItems:cartItems,\n    search:search,\n\n    onAddCart : async(product) => {\n            const cartItem = cartItems;\n            let productAlreadyInCart = false;\n            cartItem.forEach(item => {\n                if(item.id===product.id){\n                    productAlreadyInCart  = true;\n                    item.count++;\n                }\n            })\n            if(!productAlreadyInCart){\n                cartItem.push({...product,count:1})\n            }\n            setCartItems([...cartItem])\n            if(user.userId!==null)\n                await db.collection('User/').doc(user.userId).set({cartItems:cartItem});\n    },\n      handleSearch : (value) => {\n        setSearch(value);\n      },\n\n      handleChangeSort : (sort) => {\n        if(sort!==''){\n            const updated =  [...products].sort((a,b) => {\n              return (sort===\"lowest\")?(a.price > b.price?1:-1):(a.price < b.price?1:-1);\n            });\n            setfilteredProducts(updated);\n        }\n        else{\n          const updated = [...products].sort((a,b)=> { return (a.id < b.id ?1:-1)});\n          setfilteredProducts(updated);\n        }\n      },\n\n      onRemoveCart : async (removeItem) => {\n            const update =  [...cartItems].filter(item => {\n                    if(item.id===removeItem.id && removeItem.count<=1)\n                    return false;\n                    else{\n                    if(item.id===removeItem.id && removeItem.count>1)\n                        item.count--;\n                    return true;\n                    }\n                });\n                setCartItems(update);\n                if(user.userId!==null)\n                    await db.collection('User/').doc(user.userId).update({cartItems:update});\n      },\n\n      userLoginChange:(value) => {\n          setUsr_Login(value);\n      },\n\n      pwdLoginChange:(value) =>{\n          setPwd_Login(value)\n      },\n\n      cnfPwdLoginChange:(value) => {\n          setCnfPwd_Login(value)\n      },\n\n      login: (e)=>{\n          e.preventDefault();\n            fire.auth().signInWithEmailAndPassword(usrLogin,pwdLogin).then((res)=>{\n                if(res){\n                    let userCartItem = db.collection(\"User\").doc(res.user.uid);\n                    userCartItem.get().then(function(doc) {\n                        if (doc.exists) {\n                            \n                            let upc = doc.data().cartItems;\n                            \n                        if(user.email===null){\n                            let update = []\n                            upc.forEach(function(cartItem){\n                                guestCart.forEach(function(guestCar){\n                                    if(cartItem.title===guestCar.title){\n                                                 guestCar.count = cartItem.count + guestCar.count;\n                                                 update.push(guestCar);\n                                         }\n                                            })\n                                        })\n                                        resultFilter(upc,guestCart).forEach(function(val){\n                                            update.push(val)\n                                        })\n                                        resultFilter(guestCart,upc).forEach(function(val){\n                                            update.push(val)\n                                        })\n                            db.collection('User/').doc(res.user.uid).set({cartItems:update});\n                            History.push('/');\n                                }\n                            } \n                        \n                    })\n                    .catch(function(error) {\n                        console.log(\"Error getting document:\", error);\n                    });\n                   \n                }\n            })\n            .catch((err)=>{\n                console.log(err)\n            })\n                \n\n      },\n\n      signUp:(e)=>{\n            e.preventDefault();\n            if(pwdLogin === cnfPwdLogin){\n                if(user.email!==null){\n                    fire.auth().createUserWithEmailAndPassword(usrLogin,pwdLogin).then((res)=>{\n                    if(res){\n                        History.push('/products')\n                    }\n                    })\n                    .catch((err)=>{\n                        console.log(err)\n                    })\n                }\n                else\n                {\n                const cred = Firebase.auth.EmailAuthProvider.credential(usrLogin,pwdLogin)\n                Firebase.auth().currentUser.linkWithCredential(cred);\n                History.push('/products')\n                setUser({...user,email:usrLogin})\n                }\n            }\n            else{\n                alert(\"pwd not match\");\n            }\n        },\n\n        logout:() => {\n            fire.auth().signOut();\n            setCartItems([])\n        },\n        user:user,\n\n        saveAddress:(value,field) => {\n            setBillAddress({...billAddress,[field]:value})\n        },\n        submitAddress:(e) => {\n            e.preventDefault();\n            db.collection('billingAddress/').doc(user.userId).set({billAddress})\n        },\n\n        billAddress:billAddress\n\n\n  \n}\n\n}"]},"metadata":{},"sourceType":"module"}