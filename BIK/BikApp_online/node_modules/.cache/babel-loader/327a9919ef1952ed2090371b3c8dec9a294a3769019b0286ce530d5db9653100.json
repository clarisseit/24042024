{"ast":null,"code":"import React from'react';import PaypalExpressBtn from'react-paypal-express-checkout';function Paypal(props){// const onSuccess = (payment) => {\n//     // Congratulation, it came here means everything's fine!\n//             console.log(\"The payment was succeeded!\", payment);\n//             props.onSuccess(payment);\n//     \t\t// You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\n// }\n// const onCancel = (data) => {\n//     // User pressed \"cancel\" or close Paypal's popup!\n//     console.log('The payment was cancelled!', data);\n//     // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\n// }\n// const onError = (err) => {\n//     // The main Paypal's script cannot be loaded or somethings block the loading of that script!\n//     console.log(\"Error!\", err);\n//     // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\n//     // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\n// }\n// let env = 'sandbox'; // you can set here to 'production' for production\n// let currency = 'USD'; // or you can set this value from your props or state\n// let total = parseFloat(props.toPay.toFixed(1)); // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\n// Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\n// const client = {\n//     sandbox:    'ATKphVPUKrAFnWXr042hYQsynmg9U_UUeudlf1RjYkyKf3rsf5s3IE-H1QZWn8ziKEZzq5WH4TRalZR_',\n//     production: 'YOUR-PRODUCTION-APP-ID',\n// }\n// In order to get production's app-ID, you will have to send your app to Paypal for approval first\n// For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\n//   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\n// For production app-ID:\n//   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\n// NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\nreturn/*#__PURE__*/React.createElement(PaypalExpressBtn,{env:props.env,client:props.client,currency:props.currency,total:parseFloat(props.toPay.toFixed(1)),onError:props.transcationError,onSuccess:payment=>props.onSuccess(payment,props.cartItems),onCancel:props.transcationCancelled,style:{size:'large',color:'blue',shape:'rect',label:'checkout'}});}export default Paypal;","map":{"version":3,"names":["React","PaypalExpressBtn","Paypal","props","createElement","env","client","currency","total","parseFloat","toPay","toFixed","onError","transcationError","onSuccess","payment","cartItems","onCancel","transcationCancelled","style","size","color","shape","label"],"sources":["C:/Users/Admin/Documents/BikApp_online/src/components/Paypal.js"],"sourcesContent":["import React from 'react';\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\n \nfunction Paypal(props){\n        // const onSuccess = (payment) => {\n        //     // Congratulation, it came here means everything's fine!\n        //             console.log(\"The payment was succeeded!\", payment);\n        //             props.onSuccess(payment);\n        //     \t\t// You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\n        // }\n \n        // const onCancel = (data) => {\n        //     // User pressed \"cancel\" or close Paypal's popup!\n        //     console.log('The payment was cancelled!', data);\n        //     // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\n        // }\n \n        // const onError = (err) => {\n        //     // The main Paypal's script cannot be loaded or somethings block the loading of that script!\n        //     console.log(\"Error!\", err);\n        //     // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\n        //     // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\n        // }\n \n        // let env = 'sandbox'; // you can set here to 'production' for production\n        // let currency = 'USD'; // or you can set this value from your props or state\n        // let total = parseFloat(props.toPay.toFixed(1)); // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\n        // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\n \n        // const client = {\n        //     sandbox:    'ATKphVPUKrAFnWXr042hYQsynmg9U_UUeudlf1RjYkyKf3rsf5s3IE-H1QZWn8ziKEZzq5WH4TRalZR_',\n        //     production: 'YOUR-PRODUCTION-APP-ID',\n        // }\n        // In order to get production's app-ID, you will have to send your app to Paypal for approval first\n        // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\n        //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\n        // For production app-ID:\n        //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\n \n        // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\n        return (\n            <PaypalExpressBtn env={props.env} client={props.client} currency={props.currency} total={parseFloat(props.toPay.toFixed(1))} onError={props.transcationError} onSuccess={(payment)=>props.onSuccess(payment,props.cartItems)} onCancel={props.transcationCancelled} \n            style={{\n                size:'large',\n                color:'blue',\n                shape:'rect',\n                label:'checkout',\n            }}/>\n        );\n    }\nexport default Paypal;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,gBAAgB,KAAM,+BAA+B,CAE5D,QAAS,CAAAC,MAAMA,CAACC,KAAK,CAAC,CACd;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,mBACIH,KAAA,CAAAI,aAAA,CAACH,gBAAgB,EAACI,GAAG,CAAEF,KAAK,CAACE,GAAI,CAACC,MAAM,CAAEH,KAAK,CAACG,MAAO,CAACC,QAAQ,CAAEJ,KAAK,CAACI,QAAS,CAACC,KAAK,CAAEC,UAAU,CAACN,KAAK,CAACO,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,CAAE,CAACC,OAAO,CAAET,KAAK,CAACU,gBAAiB,CAACC,SAAS,CAAGC,OAAO,EAAGZ,KAAK,CAACW,SAAS,CAACC,OAAO,CAACZ,KAAK,CAACa,SAAS,CAAE,CAACC,QAAQ,CAAEd,KAAK,CAACe,oBAAqB,CACnQC,KAAK,CAAE,CACHC,IAAI,CAAC,OAAO,CACZC,KAAK,CAAC,MAAM,CACZC,KAAK,CAAC,MAAM,CACZC,KAAK,CAAC,UACV,CAAE,CAAC,CAAC,CAEZ,CACJ,cAAe,CAAArB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}